EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12020592][Inst ID: 11185208]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 11268512][Inst ID: 11268512]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 12146912][Inst ID: 11187552]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12141632][Inst ID: 12141432]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12156928][Inst ID: 12156928]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 12150080][Inst ID: 12156496]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12157536][Inst ID: 12162968]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12164352][Inst ID: 12164352]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 12157536][Inst ID: 12165152]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12169696][Inst ID: 10231848]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12170416][Inst ID: 12170416]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 12169696][Inst ID: 12169776]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12171568][Inst ID: 12177432]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12173232][Inst ID: 12173232]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 12171568][Inst ID: 12166416]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12179632][Inst ID: 12171672]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12166160][Inst ID: 12166160]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 12179632][Inst ID: 12183184]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12184768][Inst ID: 12185096]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12186368][Inst ID: 12186368]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 12184768][Inst ID: 12186704]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12189328][Inst ID: 12184408]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12190624][Inst ID: 12190624]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 12189328][Inst ID: 12191536]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12192960][Inst ID: 12189240]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12193872][Inst ID: 12193872]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 12192960][Inst ID: 12194752]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12195968][Inst ID: 12195272]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12195968][Inst ID: 12196184]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12197040][Inst ID: 12197040]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 12195968][Inst ID: 12192880]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12203328][Inst ID: 12202216]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12203632][Inst ID: 12203632]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 12203328][Inst ID: 12208080]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12213184][Inst ID: 12203432]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12213536][Inst ID: 12213536]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 12213184][Inst ID: 12213264]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12214688][Inst ID: 12209528]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12208832][Inst ID: 12208832]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 12214688][Inst ID: 12218176]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12221248][Inst ID: 12221352]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12220688][Inst ID: 12220688]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 12221248][Inst ID: 12222752]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12136816][Inst ID: 12137032]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12136816][Inst ID: 12228552]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12136816][Inst ID: 12228936]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12138560][Inst ID: 12138560]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12138624][Inst ID: 12138624]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 12243376][Inst ID: 12138384]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12247808][Inst ID: 12139368]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12247808][Inst ID: 12247720]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12247808][Inst ID: 12247576]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12247808][Inst ID: 12139032]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12247808][Inst ID: 12262408]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12255088][Inst ID: 12255088]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12255152][Inst ID: 12255152]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12255216][Inst ID: 12255216]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 12260288][Inst ID: 12279464]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12276304][Inst ID: 12275224]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12276304][Inst ID: 12275832]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12276304][Inst ID: 12275672]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12276304][Inst ID: 12139480]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12276304][Inst ID: 12216664]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12275472][Inst ID: 12275472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12285408][Inst ID: 12285408]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 12285472][Inst ID: 12285472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 12231504][Inst ID: 12312072]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 12236416][Inst ID: 12313096]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 12312864][Inst ID: 12314600]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 12314368][Inst ID: 12316360]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 12324768][Inst ID: 12325392]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 12325696][Inst ID: 12325776]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 12326512][Inst ID: 12326592]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 12331648][Inst ID: 12331856]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 12332288][Inst ID: 12332368]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 12333104][Inst ID: 12333184]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 12333920][Inst ID: 12334000]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 12129360][Inst ID: 12129440]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 12130176][Inst ID: 12130256]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 12130688][Inst ID: 12131104]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 12131840][Inst ID: 12131920]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 12348704][Inst ID: 12350944]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 12350720][Inst ID: 12226384]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 12227104][Inst ID: 11432928]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 11433360][Inst ID: 11433440]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 11434176][Inst ID: 11434256]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 11434992][Inst ID: 11435072]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 11435808][Inst ID: 11435888]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_good][Allocator Name: Return][Location: 188,1][Inlined Location: 188,1][BB ID: 38240768][Inst ID: 38239632]
  ret void, !dbg !45
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38249056][Inst ID: 38249160]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38249056][Inst ID: 38245960]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38249056][Inst ID: 38246392]
  %5 = alloca i8**, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38239872][Inst ID: 38239872]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38246800][Inst ID: 38246800]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Return][Location: 213,5][Inlined Location: 213,5][BB ID: 38249056][Inst ID: 38269416]
  ret i32 0, !dbg !60
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 112,17][Inlined Location: 112,17][BB ID: 38246208][Inst ID: 38283664]
  call void @free(i8* %11) #5, !dbg !62
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 115,50][Inlined Location: 115,50][BB ID: 38262112][Inst ID: 38286320]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !66, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 135,17][Inlined Location: 135,17][BB ID: 38290640][Inst ID: 38272048]
  call void @free(i8* %28) #5, !dbg !90
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38263328][Inst ID: 38263128]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: Return][Location: 141,1][Inlined Location: 141,1][BB ID: 38270688][Inst ID: 38256608]
  ret void, !dbg !96
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperGood][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38295488][Inst ID: 38273304]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperGood][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38278400][Inst ID: 38278400]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperGood][Allocator Name: Return][Location: 42,1][Inlined Location: 42,1][BB ID: 38295568][Inst ID: 38295984]
  ret void, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 153,17][Inlined Location: 153,17][BB ID: 38287040][Inst ID: 38305376]
  call void @free(i8* %10) #5, !dbg !59
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 156,50][Inlined Location: 156,50][BB ID: 38304368][Inst ID: 38306272]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !63, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 176,17][Inlined Location: 176,17][BB ID: 38307936][Inst ID: 38310400]
  call void @free(i8* %27) #5, !dbg !87
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 38288720][Inst ID: 38300088]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: Return][Location: 182,1][Inlined Location: 182,1][BB ID: 38301424][Inst ID: 38296320]
  ret void, !dbg !94
  call void @free(i8* %11) #5, !dbg !63, !TYCHE_MD !64
Calle Node: 0x25299e0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x2505400: ch,glue = callseq_end 0x2505860; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505860:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 112,17][BB ID: 38246208][Inst ID: 38283664][Prev. Inst ID: 112]
  call void @free(i8* %11) #5, !dbg !63, !TYCHE_MD !64
0x2505400: ch,glue = callseq_end 0x2505860; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505860:1 Node TypeID: [ 1#112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x2505400: ch,glue = callseq_end 0x2505860; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505860:1 Node TypeID: [ 1#112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]
0x2505860: ch,glue = <<Unknown Node #229>> 0x2505b80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505b80:1 Node TypeID: [ 0#]
0x2529940: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2529940: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2505860: ch,glue = <<Unknown Node #229>> 0x2505b80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505b80:1 Node TypeID: [ 0#]
0x2505860: ch,glue = <<Unknown Node #229>> 0x2505b80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505b80:1 Node TypeID: [ 1#112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]
EmitMachineNode::
0x2505860: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505b80; 0x2505b80:1 Node TypeID: [ 1#112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:112:17 Node Type ID: [112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]

  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !67, !effectiveSan !13, !TYCHE_MD !68
Calle Node: 0x2505c20: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x25299e0: i64,ch,glue = CopyFromReg 0x2529a80; Register:i64 %physreg35; 0x2529a80:1 Node TypeID: [ 0#]
Second Node: 0x25299e0: i64,ch,glue = CopyFromReg 0x2529a80; Register:i64 %physreg35; 0x2529a80:1 Node TypeID: [ 0#]
0x25299e0: i64,ch,glue = CopyFromReg 0x2529a80; Register:i64 %physreg35; 0x2529a80:1 Node TypeID: [ 1#115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 115,50][BB ID: 38262112][Inst ID: 38286320][Prev. Inst ID: 115]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !67, !effectiveSan !13, !TYCHE_MD !68
X86DAGToDAGISel:: 3
Node: 0x25299e0: i64,ch,glue = CopyFromReg 0x2529a80; Register:i64 %physreg35; 0x2529a80:1 Node TypeID: [ 1#115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]
0x2529a80: ch,glue = callseq_end 0x2505cc0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505cc0:1 Node TypeID: [ 0#]
0x2505040: i64 = Register %physreg35 Node TypeID: [ 0#]
0x2529a80: ch,glue = callseq_end 0x2505cc0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505cc0:1 Node TypeID: [ 0#]
0x2505cc0: ch,glue = <<Unknown Node #229>> 0x2505400; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505400:1 Node TypeID: [ 0#]
0x2505cc0: ch,glue = <<Unknown Node #229>> 0x2505400; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505400:1 Node TypeID: [ 1#115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]
EmitMachineNode::
0x2505cc0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505400; 0x2505400:1 Node TypeID: [ 1#115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:115:50 Node Type ID: [115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]

  call void @free(i8* %28) #5, !dbg !91, !TYCHE_MD !92
Calle Node: 0x252a200: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x2529bc0: ch,glue = callseq_end 0x2529c60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529c60:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 135,17][BB ID: 38290640][Inst ID: 38272048][Prev. Inst ID: 135]
  call void @free(i8* %28) #5, !dbg !91, !TYCHE_MD !92
0x2529bc0: ch,glue = callseq_end 0x2529c60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529c60:1 Node TypeID: [ 1#135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x2529bc0: ch,glue = callseq_end 0x2529c60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529c60:1 Node TypeID: [ 1#135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]
0x2529c60: ch,glue = <<Unknown Node #229>> 0x2505900; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505900:1 Node TypeID: [ 0#]
0x252a160: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x252a160: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2529c60: ch,glue = <<Unknown Node #229>> 0x2505900; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505900:1 Node TypeID: [ 0#]
0x2529c60: ch,glue = <<Unknown Node #229>> 0x2505900; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505900:1 Node TypeID: [ 1#135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]
EmitMachineNode::
0x2529c60: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505900; 0x2505900:1 Node TypeID: [ 1#135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:135:17 Node Type ID: [135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:112:17 Node Type ID: [112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#112#17#0#0#0#112#17#38246208#38283664#18446744073709551615#38283664#38246208#free#FREE#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:115:50 Node Type ID: [115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#115#50#38500456#7328244225587091928#15288228118847118519#115#50#38262112#38286320#5#38286320#38262112#malloc#struct _structSigAtomic#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:135:17 Node Type ID: [135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#135#17#0#0#0#135#17#38290640#38272048#18446744073709551615#38272048#38290640#free#FREE#good1#
---------------------------------------------------------------------------------------
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
Calle Node: 0x2505ae0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x2504f00: ch,glue = callseq_end 0x2529940; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529940:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 153,17][BB ID: 38287040][Inst ID: 38305376][Prev. Inst ID: 153]
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
0x2504f00: ch,glue = callseq_end 0x2529940; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529940:1 Node TypeID: [ 1#153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x2504f00: ch,glue = callseq_end 0x2529940; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2529940:1 Node TypeID: [ 1#153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]
0x2529940: ch,glue = <<Unknown Node #229>> 0x2504fa0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504fa0:1 Node TypeID: [ 0#]
0x25299e0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25299e0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2529940: ch,glue = <<Unknown Node #229>> 0x2504fa0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504fa0:1 Node TypeID: [ 0#]
0x2529940: ch,glue = <<Unknown Node #229>> 0x2504fa0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504fa0:1 Node TypeID: [ 1#153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]
EmitMachineNode::
0x2529940: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504fa0; 0x2504fa0:1 Node TypeID: [ 1#153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:153:17 Node Type ID: [153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
Calle Node: 0x2505b80: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x2505ae0: i64,ch,glue = CopyFromReg 0x2529f80; Register:i64 %physreg35; 0x2529f80:1 Node TypeID: [ 0#]
Second Node: 0x2505ae0: i64,ch,glue = CopyFromReg 0x2529f80; Register:i64 %physreg35; 0x2529f80:1 Node TypeID: [ 0#]
0x2505ae0: i64,ch,glue = CopyFromReg 0x2529f80; Register:i64 %physreg35; 0x2529f80:1 Node TypeID: [ 1#156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 156,50][BB ID: 38304368][Inst ID: 38306272][Prev. Inst ID: 156]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
X86DAGToDAGISel:: 3
Node: 0x2505ae0: i64,ch,glue = CopyFromReg 0x2529f80; Register:i64 %physreg35; 0x2529f80:1 Node TypeID: [ 1#156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]
0x2529f80: ch,glue = callseq_end 0x2505cc0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505cc0:1 Node TypeID: [ 0#]
0x2529da0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x2529f80: ch,glue = callseq_end 0x2505cc0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x2505cc0:1 Node TypeID: [ 0#]
0x2505cc0: ch,glue = <<Unknown Node #229>> 0x2504f00; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504f00:1 Node TypeID: [ 0#]
0x2505cc0: ch,glue = <<Unknown Node #229>> 0x2504f00; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504f00:1 Node TypeID: [ 1#156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]
EmitMachineNode::
0x2505cc0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2504f00; 0x2504f00:1 Node TypeID: [ 1#156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:156:50 Node Type ID: [156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]

  call void @free(i8* %27) #5, !dbg !88, !TYCHE_MD !89
Calle Node: 0x2529b20: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x2505c20: ch,glue = callseq_end 0x25059a0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25059a0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 176,17][BB ID: 38307936][Inst ID: 38310400][Prev. Inst ID: 176]
  call void @free(i8* %27) #5, !dbg !88, !TYCHE_MD !89
0x2505c20: ch,glue = callseq_end 0x25059a0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25059a0:1 Node TypeID: [ 1#176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x2505c20: ch,glue = callseq_end 0x25059a0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25059a0:1 Node TypeID: [ 1#176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]
0x25059a0: ch,glue = <<Unknown Node #229>> 0x2505220; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505220:1 Node TypeID: [ 0#]
0x2505040: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2505040: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25059a0: ch,glue = <<Unknown Node #229>> 0x2505220; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505220:1 Node TypeID: [ 0#]
0x25059a0: ch,glue = <<Unknown Node #229>> 0x2505220; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505220:1 Node TypeID: [ 1#176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]
EmitMachineNode::
0x25059a0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x2505220; 0x2505220:1 Node TypeID: [ 1#176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:176:17 Node Type ID: [176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:153:17 Node Type ID: [153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#153#17#0#0#0#153#17#38287040#38305376#18446744073709551615#38305376#38287040#free#FREE#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:156:50 Node Type ID: [156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#156#50#38500456#7328244225587091928#15288228118847118519#156#50#38304368#38306272#5#38306272#38304368#malloc#struct _structSigAtomic#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:176:17 Node Type ID: [176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#176#17#0#0#0#176#17#38307936#38310400#18446744073709551615#38310400#38307936#free#FREE#good2#
---------------------------------------------------------------------------------------
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22723440][Inst ID: 21888056]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 21971360][Inst ID: 21971360]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 22849760][Inst ID: 21890400]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22844480][Inst ID: 22844280]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22859776][Inst ID: 22859776]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 22852928][Inst ID: 22859344]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22860384][Inst ID: 22865816]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22867200][Inst ID: 22867200]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 22860384][Inst ID: 22868000]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22872544][Inst ID: 20934696]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22873264][Inst ID: 22873264]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 22872544][Inst ID: 22872624]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22874416][Inst ID: 22880280]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22876080][Inst ID: 22876080]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 22874416][Inst ID: 22869264]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22882480][Inst ID: 22874520]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22869008][Inst ID: 22869008]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 22882480][Inst ID: 22886032]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22887616][Inst ID: 22887944]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22889216][Inst ID: 22889216]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 22887616][Inst ID: 22889552]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22892176][Inst ID: 22887256]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22893472][Inst ID: 22893472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 22892176][Inst ID: 22894384]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22895808][Inst ID: 22892088]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22896720][Inst ID: 22896720]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 22895808][Inst ID: 22897600]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22898816][Inst ID: 22898120]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22898816][Inst ID: 22899032]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22899888][Inst ID: 22899888]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 22898816][Inst ID: 22895728]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22906176][Inst ID: 22905064]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22906480][Inst ID: 22906480]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 22906176][Inst ID: 22910928]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22916032][Inst ID: 22906280]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22916384][Inst ID: 22916384]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 22916032][Inst ID: 22916112]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22917536][Inst ID: 22912376]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22911680][Inst ID: 22911680]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 22917536][Inst ID: 22921024]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22924096][Inst ID: 22924200]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22923536][Inst ID: 22923536]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 22924096][Inst ID: 22925600]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22839664][Inst ID: 22839880]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22839664][Inst ID: 22931400]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22839664][Inst ID: 22931784]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22841408][Inst ID: 22841408]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22841472][Inst ID: 22841472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 22946224][Inst ID: 22841232]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22950656][Inst ID: 22842216]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22950656][Inst ID: 22950568]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22950656][Inst ID: 22950424]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22950656][Inst ID: 22841880]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22950656][Inst ID: 22965256]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22957936][Inst ID: 22957936]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22958000][Inst ID: 22958000]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22958064][Inst ID: 22958064]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 22963136][Inst ID: 22982312]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22979152][Inst ID: 22978072]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22979152][Inst ID: 22978680]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22979152][Inst ID: 22978520]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22979152][Inst ID: 22842328]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22979152][Inst ID: 22919512]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22978320][Inst ID: 22978320]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22988256][Inst ID: 22988256]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 22988320][Inst ID: 22988320]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 22934352][Inst ID: 23014920]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 22939264][Inst ID: 23015944]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 23015712][Inst ID: 23017448]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 23017216][Inst ID: 23019208]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 23027616][Inst ID: 23028240]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 23028544][Inst ID: 23028624]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 23029360][Inst ID: 23029440]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 23034496][Inst ID: 23034704]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 23035136][Inst ID: 23035216]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 23035952][Inst ID: 23036032]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 23036768][Inst ID: 23036848]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 22832208][Inst ID: 22832288]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 22833024][Inst ID: 22833104]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 22833536][Inst ID: 22833952]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 22834688][Inst ID: 22834768]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 23051552][Inst ID: 23053792]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 23053568][Inst ID: 22929232]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 22929952][Inst ID: 22135776]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 22136208][Inst ID: 22136288]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 22137024][Inst ID: 22137104]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 22137840][Inst ID: 22137920]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 22138656][Inst ID: 22138736]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 60,17][Inlined Location: 60,17][BB ID: 14287952][Inst ID: 14308816]
  call void @free(i8* %10) #5, !dbg !59
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 63,50][Inlined Location: 63,50][BB ID: 14301376][Inst ID: 14310304]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !63, !effectiveSan !12
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 86,17][Inlined Location: 86,17][BB ID: 14316160][Inst ID: 14316976]
  call void @free(i8* %26) #5, !dbg !86
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14282592][Inst ID: 14281704]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: Return][Location: 91,1][Inlined Location: 91,1][BB ID: 14281792][Inst ID: 14281456]
  ret void, !dbg !92
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperBad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14326224][Inst ID: 14325144]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperBad][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14327920][Inst ID: 14327920]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: helperBad][Allocator Name: Return][Location: 34,1][Inlined Location: 34,1][BB ID: 14325536][Inst ID: 14336240]
  ret void, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14294352][Inst ID: 14303880]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14294352][Inst ID: 14315144]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14294352][Inst ID: 14314984]
  %5 = alloca i8**, align 8, !effectiveSan !27
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14324352][Inst ID: 14324352]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 14324720][Inst ID: 14324720]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: main][Allocator Name: Return][Location: 213,5][Inlined Location: 213,5][BB ID: 14294352][Inst ID: 14335208]
  ret i32 0, !dbg !60
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
Calle Node: 0xe43570: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0xe3dbf0: ch,glue = callseq_end 0xe3dd30; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dd30:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: free][Location: 0,0][Inlined Location: 60,17][BB ID: 14287952][Inst ID: 14308816][Prev. Inst ID: 60]
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
0xe3dbf0: ch,glue = callseq_end 0xe3dd30; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dd30:1 Node TypeID: [ 1#60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
X86DAGToDAGISel:: 4
Node: 0xe3dbf0: ch,glue = callseq_end 0xe3dd30; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dd30:1 Node TypeID: [ 1#60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
0xe3dd30: ch,glue = <<Unknown Node #229>> 0xe3e050; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3e050:1 Node TypeID: [ 0#]
0xe434d0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0xe434d0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0xe3dd30: ch,glue = <<Unknown Node #229>> 0xe3e050; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3e050:1 Node TypeID: [ 0#]
0xe3dd30: ch,glue = <<Unknown Node #229>> 0xe3e050; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3e050:1 Node TypeID: [ 1#60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
EmitMachineNode::
0xe3dd30: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3e050; 0xe3e050:1 Node TypeID: [ 1#60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:60:17 Node Type ID: [60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !12, !TYCHE_MD !65
Calle Node: 0xe3e0f0: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0xe43570: i64,ch,glue = CopyFromReg 0xe43610; Register:i64 %physreg35; 0xe43610:1 Node TypeID: [ 0#]
Second Node: 0xe43570: i64,ch,glue = CopyFromReg 0xe43610; Register:i64 %physreg35; 0xe43610:1 Node TypeID: [ 0#]
0xe43570: i64,ch,glue = CopyFromReg 0xe43610; Register:i64 %physreg35; 0xe43610:1 Node TypeID: [ 1#63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 63,50][BB ID: 14301376][Inst ID: 14310304][Prev. Inst ID: 63]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !12, !TYCHE_MD !65
X86DAGToDAGISel:: 3
Node: 0xe43570: i64,ch,glue = CopyFromReg 0xe43610; Register:i64 %physreg35; 0xe43610:1 Node TypeID: [ 1#63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
0xe43610: ch,glue = callseq_end 0xe3e190; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3e190:1 Node TypeID: [ 0#]
0xe3d970: i64 = Register %physreg35 Node TypeID: [ 0#]
0xe43610: ch,glue = callseq_end 0xe3e190; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3e190:1 Node TypeID: [ 0#]
0xe3e190: ch,glue = <<Unknown Node #229>> 0xe3dbf0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3dbf0:1 Node TypeID: [ 0#]
0xe3e190: ch,glue = <<Unknown Node #229>> 0xe3dbf0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3dbf0:1 Node TypeID: [ 1#63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
EmitMachineNode::
0xe3e190: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3dbf0; 0xe3dbf0:1 Node TypeID: [ 1#63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:63:50 Node Type ID: [63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

  call void @free(i8* %26) #5, !dbg !87, !TYCHE_MD !88
Calle Node: 0xe437f0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0xe3df10: ch,glue = callseq_end 0xe3dc90; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dc90:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_07.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_07_bad][Allocator Name: free][Location: 0,0][Inlined Location: 86,17][BB ID: 14316160][Inst ID: 14316976][Prev. Inst ID: 86]
  call void @free(i8* %26) #5, !dbg !87, !TYCHE_MD !88
0xe3df10: ch,glue = callseq_end 0xe3dc90; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dc90:1 Node TypeID: [ 1#86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
X86DAGToDAGISel:: 4
Node: 0xe3df10: ch,glue = callseq_end 0xe3dc90; TargetConstant:i64<0>; TargetConstant:i64<0>; 0xe3dc90:1 Node TypeID: [ 1#86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
0xe3dc90: ch,glue = <<Unknown Node #229>> 0xe3d650; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3d650:1 Node TypeID: [ 0#]
0xe43750: i64 = TargetConstant<0> Node TypeID: [ 0#]
0xe43750: i64 = TargetConstant<0> Node TypeID: [ 0#]
0xe3dc90: ch,glue = <<Unknown Node #229>> 0xe3d650; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3d650:1 Node TypeID: [ 0#]
0xe3dc90: ch,glue = <<Unknown Node #229>> 0xe3d650; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3d650:1 Node TypeID: [ 1#86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
EmitMachineNode::
0xe3dc90: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0xe3d650; 0xe3d650:1 Node TypeID: [ 1#86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:86:17 Node Type ID: [86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:60:17 Node Type ID: [60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#60#17#0#0#0#60#17#14287952#14308816#18446744073709551615#14308816#14287952#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:63:50 Node Type ID: [63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#63#50#14564712#7328244225587091928#15288228118847118519#63#50#14301376#14310304#2#14310304#14301376#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_07_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_07.c:86:17 Node Type ID: [86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_07.c#86#17#0#0#0#86#17#14316160#14316976#18446744073709551615#14316976#14316160#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_07_bad#
---------------------------------------------------------------------------------------
