EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16145264][Inst ID: 15309880]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 15393184][Inst ID: 15393184]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 16271584][Inst ID: 15312224]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16266304][Inst ID: 16266104]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16281600][Inst ID: 16281600]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 16274752][Inst ID: 16281168]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16282208][Inst ID: 16287640]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16289024][Inst ID: 16289024]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 16282208][Inst ID: 16289824]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16294368][Inst ID: 14356520]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16295088][Inst ID: 16295088]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 16294368][Inst ID: 16294448]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16296240][Inst ID: 16302104]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16297904][Inst ID: 16297904]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 16296240][Inst ID: 16291088]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16304304][Inst ID: 16296344]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16290832][Inst ID: 16290832]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 16304304][Inst ID: 16307856]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16309440][Inst ID: 16309768]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16311040][Inst ID: 16311040]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 16309440][Inst ID: 16311376]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16314000][Inst ID: 16309080]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16315296][Inst ID: 16315296]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 16314000][Inst ID: 16316208]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16317632][Inst ID: 16313912]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16318544][Inst ID: 16318544]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 16317632][Inst ID: 16319424]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16320640][Inst ID: 16319944]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16320640][Inst ID: 16320856]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16321712][Inst ID: 16321712]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 16320640][Inst ID: 16317552]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16328000][Inst ID: 16326888]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16328304][Inst ID: 16328304]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 16328000][Inst ID: 16332752]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16337856][Inst ID: 16328104]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16338208][Inst ID: 16338208]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 16337856][Inst ID: 16337936]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16339360][Inst ID: 16334200]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16333504][Inst ID: 16333504]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 16339360][Inst ID: 16342848]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16345920][Inst ID: 16346024]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16345360][Inst ID: 16345360]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 16345920][Inst ID: 16347424]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16261488][Inst ID: 16261704]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16261488][Inst ID: 16353224]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16261488][Inst ID: 16353608]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16263232][Inst ID: 16263232]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16263296][Inst ID: 16263296]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 16368048][Inst ID: 16263056]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16372480][Inst ID: 16264040]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16372480][Inst ID: 16372392]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16372480][Inst ID: 16372248]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16372480][Inst ID: 16263704]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16372480][Inst ID: 16387080]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16379760][Inst ID: 16379760]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16379824][Inst ID: 16379824]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16379888][Inst ID: 16379888]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 16384960][Inst ID: 16404136]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400976][Inst ID: 16399896]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400976][Inst ID: 16400504]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400976][Inst ID: 16400344]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400976][Inst ID: 16264152]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400976][Inst ID: 16341336]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16400144][Inst ID: 16400144]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16410080][Inst ID: 16410080]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 16410144][Inst ID: 16410144]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 16356176][Inst ID: 16436744]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 16361088][Inst ID: 16437768]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 16437536][Inst ID: 16439272]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 16439040][Inst ID: 16441032]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 16449440][Inst ID: 16450064]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 16450368][Inst ID: 16450448]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 16451184][Inst ID: 16451264]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 16456320][Inst ID: 16456528]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 16456960][Inst ID: 16457040]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 16457776][Inst ID: 16457856]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 16458592][Inst ID: 16458672]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 16254032][Inst ID: 16254112]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 16254848][Inst ID: 16254928]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 16255360][Inst ID: 16255776]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 16256512][Inst ID: 16256592]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 16473376][Inst ID: 16475616]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 16475392][Inst ID: 16351056]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 16351776][Inst ID: 15557600]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 15558032][Inst ID: 15558112]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 15558848][Inst ID: 15558928]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 15559664][Inst ID: 15559744]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 15560480][Inst ID: 15560560]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_good][Allocator Name: Return][Location: 138,1][Inlined Location: 138,1][BB ID: 17852016][Inst ID: 17850880]
  ret void, !dbg !42
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17850768][Inst ID: 17859864]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17850768][Inst ID: 17850536]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17850768][Inst ID: 17859640]
  %5 = alloca i8**, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17854752][Inst ID: 17854752]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17859728][Inst ID: 17859728]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Return][Location: 163,5][Inlined Location: 163,5][BB ID: 17850768][Inst ID: 17885352]
  ret i32 0, !dbg !58
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 104,17][Inlined Location: 104,17][BB ID: 17891760][Inst ID: 17899424]
  call void @free(i8* %12) #5, !dbg !64
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 107,50][Inlined Location: 107,50][BB ID: 17893392][Inst ID: 17902080]
  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !68, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 127,17][Inlined Location: 127,17][BB ID: 17905232][Inst ID: 17907008]
  call void @free(i8* %29) #5, !dbg !92
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17857840][Inst ID: 17878536]
  %1 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17857840][Inst ID: 17878072]
  %2 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: Return][Location: 133,1][Inlined Location: 133,1][BB ID: 17877488][Inst ID: 17878736]
  ret void, !dbg !106
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperGood][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17886416][Inst ID: 17911176]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperGood][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17913008][Inst ID: 17913008]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperGood][Allocator Name: Return][Location: 42,1][Inlined Location: 42,1][BB ID: 17901088][Inst ID: 17912800]
  ret void, !dbg !54
  call void @free(i8* %12) #5, !dbg !66, !TYCHE_MD !67
Calle Node: 0x11b3d70: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x118fb70: ch,glue = callseq_end 0x118ffd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x118ffd0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 104,17][BB ID: 17891760][Inst ID: 17899424][Prev. Inst ID: 104]
  call void @free(i8* %12) #5, !dbg !66, !TYCHE_MD !67
0x118fb70: ch,glue = callseq_end 0x118ffd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x118ffd0:1 Node TypeID: [ 1#104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x118fb70: ch,glue = callseq_end 0x118ffd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x118ffd0:1 Node TypeID: [ 1#104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]
0x118ffd0: ch,glue = <<Unknown Node #229>> 0x11902f0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x11902f0:1 Node TypeID: [ 0#]
0x11b3cd0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x11b3cd0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x118ffd0: ch,glue = <<Unknown Node #229>> 0x11902f0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x11902f0:1 Node TypeID: [ 0#]
0x118ffd0: ch,glue = <<Unknown Node #229>> 0x11902f0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x11902f0:1 Node TypeID: [ 1#104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]
EmitMachineNode::
0x118ffd0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x11902f0; 0x11902f0:1 Node TypeID: [ 1#104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:104:17 Node Type ID: [104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]

  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !70, !effectiveSan !13, !TYCHE_MD !71
Calle Node: 0x1190390: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x11b3d70: i64,ch,glue = CopyFromReg 0x11b3e10; Register:i64 %physreg35; 0x11b3e10:1 Node TypeID: [ 0#]
Second Node: 0x11b3d70: i64,ch,glue = CopyFromReg 0x11b3e10; Register:i64 %physreg35; 0x11b3e10:1 Node TypeID: [ 0#]
0x11b3d70: i64,ch,glue = CopyFromReg 0x11b3e10; Register:i64 %physreg35; 0x11b3e10:1 Node TypeID: [ 1#107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 107,50][BB ID: 17893392][Inst ID: 17902080][Prev. Inst ID: 107]
  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !70, !effectiveSan !13, !TYCHE_MD !71
X86DAGToDAGISel:: 3
Node: 0x11b3d70: i64,ch,glue = CopyFromReg 0x11b3e10; Register:i64 %physreg35; 0x11b3e10:1 Node TypeID: [ 1#107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]
0x11b3e10: ch,glue = callseq_end 0x1190430; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1190430:1 Node TypeID: [ 0#]
0x118f7b0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x11b3e10: ch,glue = callseq_end 0x1190430; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1190430:1 Node TypeID: [ 0#]
0x1190430: ch,glue = <<Unknown Node #229>> 0x118fb70; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x118fb70:1 Node TypeID: [ 0#]
0x1190430: ch,glue = <<Unknown Node #229>> 0x118fb70; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x118fb70:1 Node TypeID: [ 1#107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]
EmitMachineNode::
0x1190430: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x118fb70; 0x118fb70:1 Node TypeID: [ 1#107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:107:50 Node Type ID: [107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]

  call void @free(i8* %29) #5, !dbg !94, !TYCHE_MD !95
Calle Node: 0x11b4590: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x11b3f50: ch,glue = callseq_end 0x11b3ff0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x11b3ff0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 127,17][BB ID: 17905232][Inst ID: 17907008][Prev. Inst ID: 127]
  call void @free(i8* %29) #5, !dbg !94, !TYCHE_MD !95
0x11b3f50: ch,glue = callseq_end 0x11b3ff0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x11b3ff0:1 Node TypeID: [ 1#127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x11b3f50: ch,glue = callseq_end 0x11b3ff0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x11b3ff0:1 Node TypeID: [ 1#127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]
0x11b3ff0: ch,glue = <<Unknown Node #229>> 0x1190070; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1190070:1 Node TypeID: [ 0#]
0x11b44f0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x11b44f0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x11b3ff0: ch,glue = <<Unknown Node #229>> 0x1190070; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1190070:1 Node TypeID: [ 0#]
0x11b3ff0: ch,glue = <<Unknown Node #229>> 0x1190070; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1190070:1 Node TypeID: [ 1#127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]
EmitMachineNode::
0x11b3ff0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1190070; 0x1190070:1 Node TypeID: [ 1#127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:127:17 Node Type ID: [127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:104:17 Node Type ID: [104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#104#17#0#0#0#104#17#17891760#17899424#18446744073709551615#17899424#17891760#free#FREE#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:107:50 Node Type ID: [107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#107#50#18101112#7328244225587091928#15288228118847118519#107#50#17893392#17902080#5#17902080#17893392#malloc#struct _structSigAtomic#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:127:17 Node Type ID: [127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#127#17#0#0#0#127#17#17905232#17907008#18446744073709551615#17907008#17905232#free#FREE#good1#
---------------------------------------------------------------------------------------
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10484592][Inst ID: 9649208]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 9732512][Inst ID: 9732512]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 10610912][Inst ID: 9651552]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10605632][Inst ID: 10605432]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10620928][Inst ID: 10620928]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 10614080][Inst ID: 10620496]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10621536][Inst ID: 10626968]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10628352][Inst ID: 10628352]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 10621536][Inst ID: 10629152]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10633696][Inst ID: 8695848]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10634416][Inst ID: 10634416]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 10633696][Inst ID: 10633776]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10635568][Inst ID: 10641432]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10637232][Inst ID: 10637232]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 10635568][Inst ID: 10630416]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10643632][Inst ID: 10635672]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10630160][Inst ID: 10630160]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 10643632][Inst ID: 10647184]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10648768][Inst ID: 10649096]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10650368][Inst ID: 10650368]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 10648768][Inst ID: 10650704]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10653328][Inst ID: 10648408]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10654624][Inst ID: 10654624]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 10653328][Inst ID: 10655536]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10656960][Inst ID: 10653240]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10657872][Inst ID: 10657872]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 10656960][Inst ID: 10658752]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10659968][Inst ID: 10659272]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10659968][Inst ID: 10660184]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10661040][Inst ID: 10661040]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 10659968][Inst ID: 10656880]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10667328][Inst ID: 10666216]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10667632][Inst ID: 10667632]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 10667328][Inst ID: 10672080]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10677184][Inst ID: 10667432]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10677536][Inst ID: 10677536]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 10677184][Inst ID: 10677264]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10678688][Inst ID: 10673528]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10672832][Inst ID: 10672832]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 10678688][Inst ID: 10682176]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10685248][Inst ID: 10685352]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10684688][Inst ID: 10684688]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 10685248][Inst ID: 10686752]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10600816][Inst ID: 10601032]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10600816][Inst ID: 10692552]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10600816][Inst ID: 10692936]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10602560][Inst ID: 10602560]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10602624][Inst ID: 10602624]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 10707376][Inst ID: 10602384]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10711808][Inst ID: 10603368]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10711808][Inst ID: 10711720]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10711808][Inst ID: 10711576]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10711808][Inst ID: 10603032]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10711808][Inst ID: 10726408]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10719088][Inst ID: 10719088]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10719152][Inst ID: 10719152]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10719216][Inst ID: 10719216]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 10724288][Inst ID: 10743464]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10740304][Inst ID: 10739224]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10740304][Inst ID: 10739832]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10740304][Inst ID: 10739672]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10740304][Inst ID: 10603480]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10740304][Inst ID: 10680664]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10739472][Inst ID: 10739472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10749408][Inst ID: 10749408]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 10749472][Inst ID: 10749472]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 10695504][Inst ID: 10776072]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 10700416][Inst ID: 10777096]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 10776864][Inst ID: 10778600]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 10778368][Inst ID: 10780360]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 10788768][Inst ID: 10789392]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 10789696][Inst ID: 10789776]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 10790512][Inst ID: 10790592]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 10795648][Inst ID: 10795856]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 10796288][Inst ID: 10796368]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 10797104][Inst ID: 10797184]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 10797920][Inst ID: 10798000]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 10593360][Inst ID: 10593440]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 10594176][Inst ID: 10594256]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 10594688][Inst ID: 10595104]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 10595840][Inst ID: 10595920]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 10812704][Inst ID: 10814944]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 10814720][Inst ID: 10690384]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 10691104][Inst ID: 9896928]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 9897360][Inst ID: 9897440]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 9898176][Inst ID: 9898256]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 9898992][Inst ID: 9899072]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 9899808][Inst ID: 9899888]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 56,17][Inlined Location: 56,17][BB ID: 39117136][Inst ID: 39144752]
  call void @free(i8* %12) #5, !dbg !64
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 59,50][Inlined Location: 59,50][BB ID: 39137504][Inst ID: 39146272]
  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !68, !effectiveSan !12
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 82,17][Inlined Location: 82,17][BB ID: 39139344][Inst ID: 39153232]
  call void @free(i8* %28) #5, !dbg !91
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39117936][Inst ID: 39117736]
  %1 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39117936][Inst ID: 39116936]
  %2 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: Return][Location: 87,1][Inlined Location: 87,1][BB ID: 39132576][Inst ID: 39116800]
  ret void, !dbg !104
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperBad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39100032][Inst ID: 39150984]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperBad][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39164992][Inst ID: 39164992]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: helperBad][Allocator Name: Return][Location: 34,1][Inlined Location: 34,1][BB ID: 39162896][Inst ID: 39163664]
  ret void, !dbg !54
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39127424][Inst ID: 39150872]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39127424][Inst ID: 39150712]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39127424][Inst ID: 39117576]
  %5 = alloca i8**, align 8, !effectiveSan !27
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39161968][Inst ID: 39161968]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39162336][Inst ID: 39162336]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: main][Allocator Name: Return][Location: 163,5][Inlined Location: 163,5][BB ID: 39127424][Inst ID: 39165192]
  ret i32 0, !dbg !58
  call void @free(i8* %12) #5, !dbg !66, !TYCHE_MD !67
Calle Node: 0x25f3630: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x25ef4c0: ch,glue = callseq_end 0x25ef600; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef600:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: free][Location: 0,0][Inlined Location: 56,17][BB ID: 39117136][Inst ID: 39144752][Prev. Inst ID: 56]
  call void @free(i8* %12) #5, !dbg !66, !TYCHE_MD !67
0x25ef4c0: ch,glue = callseq_end 0x25ef600; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef600:1 Node TypeID: [ 1#56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
X86DAGToDAGISel:: 4
Node: 0x25ef4c0: ch,glue = callseq_end 0x25ef600; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef600:1 Node TypeID: [ 1#56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
0x25ef600: ch,glue = <<Unknown Node #229>> 0x25ef920; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef920:1 Node TypeID: [ 0#]
0x25f3590: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25f3590: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25ef600: ch,glue = <<Unknown Node #229>> 0x25ef920; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef920:1 Node TypeID: [ 0#]
0x25ef600: ch,glue = <<Unknown Node #229>> 0x25ef920; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef920:1 Node TypeID: [ 1#56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
EmitMachineNode::
0x25ef600: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef920; 0x25ef920:1 Node TypeID: [ 1#56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:56:17 Node Type ID: [56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !70, !effectiveSan !12, !TYCHE_MD !71
Calle Node: 0x25ef9c0: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x25f3630: i64,ch,glue = CopyFromReg 0x25f36d0; Register:i64 %physreg35; 0x25f36d0:1 Node TypeID: [ 0#]
Second Node: 0x25f3630: i64,ch,glue = CopyFromReg 0x25f36d0; Register:i64 %physreg35; 0x25f36d0:1 Node TypeID: [ 0#]
0x25f3630: i64,ch,glue = CopyFromReg 0x25f36d0; Register:i64 %physreg35; 0x25f36d0:1 Node TypeID: [ 1#59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 59,50][BB ID: 39137504][Inst ID: 39146272][Prev. Inst ID: 59]
  %14 = call noalias i8* @malloc(i64 4) #5, !dbg !70, !effectiveSan !12, !TYCHE_MD !71
X86DAGToDAGISel:: 3
Node: 0x25f3630: i64,ch,glue = CopyFromReg 0x25f36d0; Register:i64 %physreg35; 0x25f36d0:1 Node TypeID: [ 1#59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
0x25f36d0: ch,glue = callseq_end 0x25efa60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25efa60:1 Node TypeID: [ 0#]
0x25ef240: i64 = Register %physreg35 Node TypeID: [ 0#]
0x25f36d0: ch,glue = callseq_end 0x25efa60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25efa60:1 Node TypeID: [ 0#]
0x25efa60: ch,glue = <<Unknown Node #229>> 0x25ef4c0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef4c0:1 Node TypeID: [ 0#]
0x25efa60: ch,glue = <<Unknown Node #229>> 0x25ef4c0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef4c0:1 Node TypeID: [ 1#59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
EmitMachineNode::
0x25efa60: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25ef4c0; 0x25ef4c0:1 Node TypeID: [ 1#59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:59:50 Node Type ID: [59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

  call void @free(i8* %28) #5, !dbg !93, !TYCHE_MD !94
Calle Node: 0x25f38b0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x25ef7e0: ch,glue = callseq_end 0x25ef560; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef560:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_17.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_17_bad][Allocator Name: free][Location: 0,0][Inlined Location: 82,17][BB ID: 39139344][Inst ID: 39153232][Prev. Inst ID: 82]
  call void @free(i8* %28) #5, !dbg !93, !TYCHE_MD !94
0x25ef7e0: ch,glue = callseq_end 0x25ef560; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef560:1 Node TypeID: [ 1#82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
X86DAGToDAGISel:: 4
Node: 0x25ef7e0: ch,glue = callseq_end 0x25ef560; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x25ef560:1 Node TypeID: [ 1#82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
0x25ef560: ch,glue = <<Unknown Node #229>> 0x25eef20; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25eef20:1 Node TypeID: [ 0#]
0x25f3810: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25f3810: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x25ef560: ch,glue = <<Unknown Node #229>> 0x25eef20; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25eef20:1 Node TypeID: [ 0#]
0x25ef560: ch,glue = <<Unknown Node #229>> 0x25eef20; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25eef20:1 Node TypeID: [ 1#82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
EmitMachineNode::
0x25ef560: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x25eef20; 0x25eef20:1 Node TypeID: [ 1#82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:82:17 Node Type ID: [82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:56:17 Node Type ID: [56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#56#17#0#0#0#56#17#39117136#39144752#18446744073709551615#39144752#39117136#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:59:50 Node Type ID: [59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#59#50#39401064#7328244225587091928#15288228118847118519#59#50#39137504#39146272#2#39146272#39137504#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_17_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_17.c:82:17 Node Type ID: [82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_17.c#82#17#0#0#0#82#17#39139344#39153232#18446744073709551615#39153232#39139344#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_17_bad#
---------------------------------------------------------------------------------------
