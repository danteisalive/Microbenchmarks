EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20040560][Inst ID: 19205176]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 19288480][Inst ID: 19288480]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 20166880][Inst ID: 19207520]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20161600][Inst ID: 20161400]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20176896][Inst ID: 20176896]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 20170048][Inst ID: 20176464]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20177504][Inst ID: 20182936]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20184320][Inst ID: 20184320]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 20177504][Inst ID: 20185120]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20189664][Inst ID: 18251816]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20190384][Inst ID: 20190384]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 20189664][Inst ID: 20189744]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20191536][Inst ID: 20197400]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20193200][Inst ID: 20193200]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 20191536][Inst ID: 20186384]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20199600][Inst ID: 20191640]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20186128][Inst ID: 20186128]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 20199600][Inst ID: 20203152]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20204736][Inst ID: 20205064]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20206336][Inst ID: 20206336]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 20204736][Inst ID: 20206672]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20209296][Inst ID: 20204376]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20210592][Inst ID: 20210592]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 20209296][Inst ID: 20211504]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20212928][Inst ID: 20209208]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20213840][Inst ID: 20213840]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 20212928][Inst ID: 20214720]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20215936][Inst ID: 20215240]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20215936][Inst ID: 20216152]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20217008][Inst ID: 20217008]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 20215936][Inst ID: 20212848]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20223296][Inst ID: 20222184]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20223600][Inst ID: 20223600]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 20223296][Inst ID: 20228048]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20233152][Inst ID: 20223400]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20233504][Inst ID: 20233504]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 20233152][Inst ID: 20233232]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20234656][Inst ID: 20229496]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20228800][Inst ID: 20228800]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 20234656][Inst ID: 20238144]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20241216][Inst ID: 20241320]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20240656][Inst ID: 20240656]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 20241216][Inst ID: 20242720]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20156784][Inst ID: 20157000]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20156784][Inst ID: 20248520]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20156784][Inst ID: 20248904]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20158528][Inst ID: 20158528]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20158592][Inst ID: 20158592]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 20263344][Inst ID: 20158352]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20267776][Inst ID: 20159336]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20267776][Inst ID: 20267688]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20267776][Inst ID: 20267544]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20267776][Inst ID: 20159000]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20267776][Inst ID: 20282376]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20275056][Inst ID: 20275056]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20275120][Inst ID: 20275120]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20275184][Inst ID: 20275184]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 20280256][Inst ID: 20299432]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20296272][Inst ID: 20295192]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20296272][Inst ID: 20295800]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20296272][Inst ID: 20295640]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20296272][Inst ID: 20159448]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20296272][Inst ID: 20236632]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20295440][Inst ID: 20295440]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20305376][Inst ID: 20305376]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 20305440][Inst ID: 20305440]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 20251472][Inst ID: 20332040]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 20256384][Inst ID: 20333064]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 20332832][Inst ID: 20334568]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 20334336][Inst ID: 20336328]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 20344736][Inst ID: 20345360]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 20345664][Inst ID: 20345744]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 20346480][Inst ID: 20346560]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 20351616][Inst ID: 20351824]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 20352256][Inst ID: 20352336]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 20353072][Inst ID: 20353152]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 20353888][Inst ID: 20353968]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 20149328][Inst ID: 20149408]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 20150144][Inst ID: 20150224]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 20150656][Inst ID: 20151072]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 20151808][Inst ID: 20151888]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 20368672][Inst ID: 20370912]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 20370688][Inst ID: 20246352]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 20247072][Inst ID: 19452896]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 19453328][Inst ID: 19453408]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 19454144][Inst ID: 19454224]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 19454960][Inst ID: 19455040]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 19455776][Inst ID: 19455856]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_good][Allocator Name: Return][Location: 196,1][Inlined Location: 196,1][BB ID: 18957200][Inst ID: 18956064]
  ret void, !dbg !43
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18965360][Inst ID: 18965464]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18965360][Inst ID: 18962264]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18965360][Inst ID: 18962696]
  %5 = alloca i8**, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18956304][Inst ID: 18956304]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18963104][Inst ID: 18963104]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Return][Location: 221,5][Inlined Location: 221,5][BB ID: 18965360][Inst ID: 18985720]
  ret i32 0, !dbg !58
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 120,17][Inlined Location: 120,17][BB ID: 18981584][Inst ID: 19000128]
  call void @free(i8* %11) #5, !dbg !59
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 123,50][Inlined Location: 123,50][BB ID: 18972048][Inst ID: 19002752]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !63, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 143,17][Inlined Location: 143,17][BB ID: 19006928][Inst ID: 19007776]
  call void @free(i8* %28) #5, !dbg !87
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18979632][Inst ID: 18972600]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: Return][Location: 149,1][Inlined Location: 149,1][BB ID: 18986992][Inst ID: 18973136]
  ret void, !dbg !93
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperGood][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 19013488][Inst ID: 18994712]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperGood][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 19014304][Inst ID: 19014304]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperGood][Allocator Name: Return][Location: 42,1][Inlined Location: 42,1][BB ID: 18989760][Inst ID: 19014144]
  ret void, !dbg !54
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: staticReturnsFalse][Allocator Name: Return][Location: 54,5][Inlined Location: 54,5][BB ID: 18990144][Inst ID: 19012920]
  ret i32 0, !dbg !41
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 161,17][Inlined Location: 161,17][BB ID: 19003312][Inst ID: 19023168]
  call void @free(i8* %10) #5, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 164,50][Inlined Location: 164,50][BB ID: 18994576][Inst ID: 19024064]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !60, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 184,17][Inlined Location: 184,17][BB ID: 19025728][Inst ID: 19028192]
  call void @free(i8* %27) #5, !dbg !84
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 19005008][Inst ID: 18989560]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: Return][Location: 190,1][Inlined Location: 190,1][BB ID: 19019248][Inst ID: 19014560]
  ret void, !dbg !91
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: staticReturnsTrue][Allocator Name: Return][Location: 49,5][Inlined Location: 49,5][BB ID: 19010256][Inst ID: 18967016]
  ret i32 1, !dbg !41
  call void @free(i8* %11) #5, !dbg !60, !TYCHE_MD !61
Calle Node: 0x12c5050: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x12a1980: ch,glue = callseq_end 0x12a1de0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1de0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 120,17][BB ID: 18981584][Inst ID: 19000128][Prev. Inst ID: 120]
  call void @free(i8* %11) #5, !dbg !60, !TYCHE_MD !61
0x12a1980: ch,glue = callseq_end 0x12a1de0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1de0:1 Node TypeID: [ 1#120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x12a1980: ch,glue = callseq_end 0x12a1de0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1de0:1 Node TypeID: [ 1#120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]
0x12a1de0: ch,glue = <<Unknown Node #229>> 0x12a2100; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a2100:1 Node TypeID: [ 0#]
0x12c4fb0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12c4fb0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12a1de0: ch,glue = <<Unknown Node #229>> 0x12a2100; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a2100:1 Node TypeID: [ 0#]
0x12a1de0: ch,glue = <<Unknown Node #229>> 0x12a2100; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a2100:1 Node TypeID: [ 1#120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]
EmitMachineNode::
0x12a1de0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a2100; 0x12a2100:1 Node TypeID: [ 1#120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:120:17 Node Type ID: [120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]

  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
Calle Node: 0x12a21a0: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x12c5050: i64,ch,glue = CopyFromReg 0x12c50f0; Register:i64 %physreg35; 0x12c50f0:1 Node TypeID: [ 0#]
Second Node: 0x12c5050: i64,ch,glue = CopyFromReg 0x12c50f0; Register:i64 %physreg35; 0x12c50f0:1 Node TypeID: [ 0#]
0x12c5050: i64,ch,glue = CopyFromReg 0x12c50f0; Register:i64 %physreg35; 0x12c50f0:1 Node TypeID: [ 1#123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 123,50][BB ID: 18972048][Inst ID: 19002752][Prev. Inst ID: 123]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
X86DAGToDAGISel:: 3
Node: 0x12c5050: i64,ch,glue = CopyFromReg 0x12c50f0; Register:i64 %physreg35; 0x12c50f0:1 Node TypeID: [ 1#123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]
0x12c50f0: ch,glue = callseq_end 0x12a2240; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a2240:1 Node TypeID: [ 0#]
0x12a1ca0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x12c50f0: ch,glue = callseq_end 0x12a2240; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a2240:1 Node TypeID: [ 0#]
0x12a2240: ch,glue = <<Unknown Node #229>> 0x12a1980; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1980:1 Node TypeID: [ 0#]
0x12a2240: ch,glue = <<Unknown Node #229>> 0x12a1980; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1980:1 Node TypeID: [ 1#123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]
EmitMachineNode::
0x12a2240: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1980; 0x12a1980:1 Node TypeID: [ 1#123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:123:50 Node Type ID: [123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]

  call void @free(i8* %28) #5, !dbg !88, !TYCHE_MD !89
Calle Node: 0x12c5870: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x12c5230: ch,glue = callseq_end 0x12c52d0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c52d0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 143,17][BB ID: 19006928][Inst ID: 19007776][Prev. Inst ID: 143]
  call void @free(i8* %28) #5, !dbg !88, !TYCHE_MD !89
0x12c5230: ch,glue = callseq_end 0x12c52d0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c52d0:1 Node TypeID: [ 1#143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x12c5230: ch,glue = callseq_end 0x12c52d0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c52d0:1 Node TypeID: [ 1#143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]
0x12c52d0: ch,glue = <<Unknown Node #229>> 0x12a1e80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1e80:1 Node TypeID: [ 0#]
0x12c57d0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12c57d0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12c52d0: ch,glue = <<Unknown Node #229>> 0x12a1e80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1e80:1 Node TypeID: [ 0#]
0x12c52d0: ch,glue = <<Unknown Node #229>> 0x12a1e80; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1e80:1 Node TypeID: [ 1#143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]
EmitMachineNode::
0x12c52d0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1e80; 0x12a1e80:1 Node TypeID: [ 1#143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:143:17 Node Type ID: [143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:120:17 Node Type ID: [120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#120#17#0#0#0#120#17#18981584#19000128#18446744073709551615#19000128#18981584#free#FREE#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:123:50 Node Type ID: [123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#123#50#19219096#7328244225587091928#15288228118847118519#123#50#18972048#19002752#5#19002752#18972048#malloc#struct _structSigAtomic#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:143:17 Node Type ID: [143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#143#17#0#0#0#143#17#19006928#19007776#18446744073709551615#19007776#19006928#free#FREE#good1#
---------------------------------------------------------------------------------------
  call void @free(i8* %10) #5, !dbg !57, !TYCHE_MD !58
Calle Node: 0x12a2060: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x12a1340: ch,glue = callseq_end 0x12c4fb0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c4fb0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 161,17][BB ID: 19003312][Inst ID: 19023168][Prev. Inst ID: 161]
  call void @free(i8* %10) #5, !dbg !57, !TYCHE_MD !58
0x12a1340: ch,glue = callseq_end 0x12c4fb0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c4fb0:1 Node TypeID: [ 1#161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x12a1340: ch,glue = callseq_end 0x12c4fb0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12c4fb0:1 Node TypeID: [ 1#161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]
0x12c4fb0: ch,glue = <<Unknown Node #229>> 0x12a1520; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1520:1 Node TypeID: [ 0#]
0x12c5050: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12c5050: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12c4fb0: ch,glue = <<Unknown Node #229>> 0x12a1520; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1520:1 Node TypeID: [ 0#]
0x12c4fb0: ch,glue = <<Unknown Node #229>> 0x12a1520; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1520:1 Node TypeID: [ 1#161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]
EmitMachineNode::
0x12c4fb0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1520; 0x12a1520:1 Node TypeID: [ 1#161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:161:17 Node Type ID: [161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !61, !effectiveSan !13, !TYCHE_MD !62
Calle Node: 0x12a2100: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x12a2060: i64,ch,glue = CopyFromReg 0x12c55f0; Register:i64 %physreg35; 0x12c55f0:1 Node TypeID: [ 0#]
Second Node: 0x12a2060: i64,ch,glue = CopyFromReg 0x12c55f0; Register:i64 %physreg35; 0x12c55f0:1 Node TypeID: [ 0#]
0x12a2060: i64,ch,glue = CopyFromReg 0x12c55f0; Register:i64 %physreg35; 0x12c55f0:1 Node TypeID: [ 1#164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 164,50][BB ID: 18994576][Inst ID: 19024064][Prev. Inst ID: 164]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !61, !effectiveSan !13, !TYCHE_MD !62
X86DAGToDAGISel:: 3
Node: 0x12a2060: i64,ch,glue = CopyFromReg 0x12c55f0; Register:i64 %physreg35; 0x12c55f0:1 Node TypeID: [ 1#164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]
0x12c55f0: ch,glue = callseq_end 0x12a2240; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a2240:1 Node TypeID: [ 0#]
0x12a1d40: i64 = Register %physreg35 Node TypeID: [ 0#]
0x12c55f0: ch,glue = callseq_end 0x12a2240; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a2240:1 Node TypeID: [ 0#]
0x12a2240: ch,glue = <<Unknown Node #229>> 0x12a1340; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1340:1 Node TypeID: [ 0#]
0x12a2240: ch,glue = <<Unknown Node #229>> 0x12a1340; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1340:1 Node TypeID: [ 1#164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]
EmitMachineNode::
0x12a2240: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a1340; 0x12a1340:1 Node TypeID: [ 1#164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:164:50 Node Type ID: [164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]

  call void @free(i8* %27) #5, !dbg !85, !TYCHE_MD !86
Calle Node: 0x12c5190: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x12a21a0: ch,glue = callseq_end 0x12a1f20; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1f20:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 184,17][BB ID: 19025728][Inst ID: 19028192][Prev. Inst ID: 184]
  call void @free(i8* %27) #5, !dbg !85, !TYCHE_MD !86
0x12a21a0: ch,glue = callseq_end 0x12a1f20; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1f20:1 Node TypeID: [ 1#184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x12a21a0: ch,glue = callseq_end 0x12a1f20; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x12a1f20:1 Node TypeID: [ 1#184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]
0x12a1f20: ch,glue = <<Unknown Node #229>> 0x12a17a0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a17a0:1 Node TypeID: [ 0#]
0x12a1ca0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12a1ca0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x12a1f20: ch,glue = <<Unknown Node #229>> 0x12a17a0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a17a0:1 Node TypeID: [ 0#]
0x12a1f20: ch,glue = <<Unknown Node #229>> 0x12a17a0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a17a0:1 Node TypeID: [ 1#184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]
EmitMachineNode::
0x12a1f20: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x12a17a0; 0x12a17a0:1 Node TypeID: [ 1#184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:184:17 Node Type ID: [184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:161:17 Node Type ID: [161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#161#17#0#0#0#161#17#19003312#19023168#18446744073709551615#19023168#19003312#free#FREE#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:164:50 Node Type ID: [164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#164#50#19219096#7328244225587091928#15288228118847118519#164#50#18994576#19024064#5#19024064#18994576#malloc#struct _structSigAtomic#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:184:17 Node Type ID: [184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#184#17#0#0#0#184#17#19025728#19028192#18446744073709551615#19028192#19025728#free#FREE#good2#
---------------------------------------------------------------------------------------
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18557808][Inst ID: 17722424]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 17805728][Inst ID: 17805728]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 18684128][Inst ID: 17724768]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18678848][Inst ID: 18678648]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18694144][Inst ID: 18694144]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 18687296][Inst ID: 18693712]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18694752][Inst ID: 18700184]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18701568][Inst ID: 18701568]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 18694752][Inst ID: 18702368]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18706912][Inst ID: 16769064]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18707632][Inst ID: 18707632]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 18706912][Inst ID: 18706992]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18708784][Inst ID: 18714648]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18710448][Inst ID: 18710448]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 18708784][Inst ID: 18703632]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18716848][Inst ID: 18708888]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18703376][Inst ID: 18703376]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 18716848][Inst ID: 18720400]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18721984][Inst ID: 18722312]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18723584][Inst ID: 18723584]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 18721984][Inst ID: 18723920]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18726544][Inst ID: 18721624]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18727840][Inst ID: 18727840]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 18726544][Inst ID: 18728752]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18730176][Inst ID: 18726456]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18731088][Inst ID: 18731088]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 18730176][Inst ID: 18731968]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18733184][Inst ID: 18732488]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18733184][Inst ID: 18733400]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18734256][Inst ID: 18734256]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 18733184][Inst ID: 18730096]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18740544][Inst ID: 18739432]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18740848][Inst ID: 18740848]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 18740544][Inst ID: 18745296]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18750400][Inst ID: 18740648]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18750752][Inst ID: 18750752]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 18750400][Inst ID: 18750480]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18751904][Inst ID: 18746744]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18746048][Inst ID: 18746048]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 18751904][Inst ID: 18755392]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18758464][Inst ID: 18758568]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18757904][Inst ID: 18757904]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 18758464][Inst ID: 18759968]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18674032][Inst ID: 18674248]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18674032][Inst ID: 18765768]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18674032][Inst ID: 18766152]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18675776][Inst ID: 18675776]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18675840][Inst ID: 18675840]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 18780592][Inst ID: 18675600]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18785024][Inst ID: 18676584]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18785024][Inst ID: 18784936]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18785024][Inst ID: 18784792]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18785024][Inst ID: 18676248]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18785024][Inst ID: 18799624]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18792304][Inst ID: 18792304]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18792368][Inst ID: 18792368]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18792432][Inst ID: 18792432]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 18797504][Inst ID: 18816680]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18813520][Inst ID: 18812440]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18813520][Inst ID: 18813048]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18813520][Inst ID: 18812888]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18813520][Inst ID: 18676696]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18813520][Inst ID: 18753880]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18812688][Inst ID: 18812688]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18822624][Inst ID: 18822624]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18822688][Inst ID: 18822688]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 18768720][Inst ID: 18849288]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 18773632][Inst ID: 18850312]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 18850080][Inst ID: 18851816]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 18851584][Inst ID: 18853576]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 18861984][Inst ID: 18862608]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 18862912][Inst ID: 18862992]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 18863728][Inst ID: 18863808]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 18868864][Inst ID: 18869072]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 18869504][Inst ID: 18869584]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 18870320][Inst ID: 18870400]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 18871136][Inst ID: 18871216]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 18666576][Inst ID: 18666656]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 18667392][Inst ID: 18667472]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 18667904][Inst ID: 18668320]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 18669056][Inst ID: 18669136]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 18885920][Inst ID: 18888160]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 18887936][Inst ID: 18763600]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 18764320][Inst ID: 17970144]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 17970576][Inst ID: 17970656]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 17971392][Inst ID: 17971472]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 17972208][Inst ID: 17972288]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 17973024][Inst ID: 17973104]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 68,17][Inlined Location: 68,17][BB ID: 29432304][Inst ID: 29439840]
  call void @free(i8* %10) #5, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 71,50][Inlined Location: 71,50][BB ID: 29418928][Inst ID: 29441616]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !60, !effectiveSan !12
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 94,17][Inlined Location: 94,17][BB ID: 29448320][Inst ID: 29449136]
  call void @free(i8* %26) #5, !dbg !83
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29413568][Inst ID: 29411928]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: Return][Location: 99,1][Inlined Location: 99,1][BB ID: 29412768][Inst ID: 29412432]
  ret void, !dbg !89
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperBad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29466832][Inst ID: 29458984]
  %2 = alloca i32, align 4, !effectiveSan !26
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperBad][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29469472][Inst ID: 29469472]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: helperBad][Allocator Name: Return][Location: 34,1][Inlined Location: 34,1][BB ID: 29456720][Inst ID: 29468592]
  ret void, !dbg !54
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29425904][Inst ID: 29435112]
  %3 = alloca i32, align 4, !effectiveSan !26
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29425904][Inst ID: 29434200]
  %4 = alloca i32, align 4, !effectiveSan !26
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29425904][Inst ID: 29434312]
  %5 = alloca i8**, align 8, !effectiveSan !27
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29455584][Inst ID: 29455584]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 29455824][Inst ID: 29455824]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: main][Allocator Name: Return][Location: 221,5][Inlined Location: 221,5][BB ID: 29425904][Inst ID: 29458648]
  ret i32 0, !dbg !58
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: staticReturnsTrue][Allocator Name: Return][Location: 49,5][Inlined Location: 49,5][BB ID: 29456864][Inst ID: 29467352]
  ret i32 1, !dbg !41
  call void @free(i8* %10) #5, !dbg !57, !TYCHE_MD !58
Calle Node: 0x1cb0ee0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x1cac570: ch,glue = callseq_end 0x1cac6b0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac6b0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: free][Location: 0,0][Inlined Location: 68,17][BB ID: 29432304][Inst ID: 29439840][Prev. Inst ID: 68]
  call void @free(i8* %10) #5, !dbg !57, !TYCHE_MD !58
0x1cac570: ch,glue = callseq_end 0x1cac6b0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac6b0:1 Node TypeID: [ 1#68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
X86DAGToDAGISel:: 4
Node: 0x1cac570: ch,glue = callseq_end 0x1cac6b0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac6b0:1 Node TypeID: [ 1#68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
0x1cac6b0: ch,glue = <<Unknown Node #229>> 0x1cac9d0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac9d0:1 Node TypeID: [ 0#]
0x1cb0e40: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1cb0e40: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1cac6b0: ch,glue = <<Unknown Node #229>> 0x1cac9d0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac9d0:1 Node TypeID: [ 0#]
0x1cac6b0: ch,glue = <<Unknown Node #229>> 0x1cac9d0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac9d0:1 Node TypeID: [ 1#68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
EmitMachineNode::
0x1cac6b0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac9d0; 0x1cac9d0:1 Node TypeID: [ 1#68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:68:17 Node Type ID: [68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !61, !effectiveSan !12, !TYCHE_MD !62
Calle Node: 0x1caca70: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x1cb0ee0: i64,ch,glue = CopyFromReg 0x1cb0f80; Register:i64 %physreg35; 0x1cb0f80:1 Node TypeID: [ 0#]
Second Node: 0x1cb0ee0: i64,ch,glue = CopyFromReg 0x1cb0f80; Register:i64 %physreg35; 0x1cb0f80:1 Node TypeID: [ 0#]
0x1cb0ee0: i64,ch,glue = CopyFromReg 0x1cb0f80; Register:i64 %physreg35; 0x1cb0f80:1 Node TypeID: [ 1#71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 71,50][BB ID: 29418928][Inst ID: 29441616][Prev. Inst ID: 71]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !61, !effectiveSan !12, !TYCHE_MD !62
X86DAGToDAGISel:: 3
Node: 0x1cb0ee0: i64,ch,glue = CopyFromReg 0x1cb0f80; Register:i64 %physreg35; 0x1cb0f80:1 Node TypeID: [ 1#71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
0x1cb0f80: ch,glue = callseq_end 0x1cacb10; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cacb10:1 Node TypeID: [ 0#]
0x1cabcb0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x1cb0f80: ch,glue = callseq_end 0x1cacb10; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cacb10:1 Node TypeID: [ 0#]
0x1cacb10: ch,glue = <<Unknown Node #229>> 0x1cac570; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac570:1 Node TypeID: [ 0#]
0x1cacb10: ch,glue = <<Unknown Node #229>> 0x1cac570; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac570:1 Node TypeID: [ 1#71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
EmitMachineNode::
0x1cacb10: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cac570; 0x1cac570:1 Node TypeID: [ 1#71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:71:50 Node Type ID: [71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

  call void @free(i8* %26) #5, !dbg !84, !TYCHE_MD !85
Calle Node: 0x1cb1160: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x1cac890: ch,glue = callseq_end 0x1cac610; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac610:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_08.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_08_bad][Allocator Name: free][Location: 0,0][Inlined Location: 94,17][BB ID: 29448320][Inst ID: 29449136][Prev. Inst ID: 94]
  call void @free(i8* %26) #5, !dbg !84, !TYCHE_MD !85
0x1cac890: ch,glue = callseq_end 0x1cac610; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac610:1 Node TypeID: [ 1#94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
X86DAGToDAGISel:: 4
Node: 0x1cac890: ch,glue = callseq_end 0x1cac610; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1cac610:1 Node TypeID: [ 1#94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
0x1cac610: ch,glue = <<Unknown Node #229>> 0x1cabd50; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cabd50:1 Node TypeID: [ 0#]
0x1cb10c0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1cb10c0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1cac610: ch,glue = <<Unknown Node #229>> 0x1cabd50; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cabd50:1 Node TypeID: [ 0#]
0x1cac610: ch,glue = <<Unknown Node #229>> 0x1cabd50; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cabd50:1 Node TypeID: [ 1#94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
EmitMachineNode::
0x1cac610: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x1cabd50; 0x1cabd50:1 Node TypeID: [ 1#94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:94:17 Node Type ID: [94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:68:17 Node Type ID: [68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#68#17#0#0#0#68#17#29432304#29439840#18446744073709551615#29439840#29432304#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:71:50 Node Type ID: [71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#71#50#29689784#7328244225587091928#15288228118847118519#71#50#29418928#29441616#2#29441616#29418928#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_08_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_08.c:94:17 Node Type ID: [94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_08.c#94#17#0#0#0#94#17#29448320#29449136#18446744073709551615#29449136#29448320#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_08_bad#
---------------------------------------------------------------------------------------
