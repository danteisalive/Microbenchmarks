EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27069296][Inst ID: 26233912]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 26317216][Inst ID: 26317216]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 27195616][Inst ID: 26236256]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27190336][Inst ID: 27190136]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27205632][Inst ID: 27205632]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 27198784][Inst ID: 27205200]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27206240][Inst ID: 27211672]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27213056][Inst ID: 27213056]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 27206240][Inst ID: 27213856]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27218400][Inst ID: 25280552]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27219120][Inst ID: 27219120]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 27218400][Inst ID: 27218480]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27220272][Inst ID: 27226136]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27221936][Inst ID: 27221936]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 27220272][Inst ID: 27215120]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27228336][Inst ID: 27220376]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27214864][Inst ID: 27214864]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 27228336][Inst ID: 27231888]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27233472][Inst ID: 27233800]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27235072][Inst ID: 27235072]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 27233472][Inst ID: 27235408]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27238032][Inst ID: 27233112]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27239328][Inst ID: 27239328]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 27238032][Inst ID: 27240240]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27241664][Inst ID: 27237944]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27242576][Inst ID: 27242576]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 27241664][Inst ID: 27243456]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27244672][Inst ID: 27243976]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27244672][Inst ID: 27244888]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27245744][Inst ID: 27245744]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 27244672][Inst ID: 27241584]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27252032][Inst ID: 27250920]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27252336][Inst ID: 27252336]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 27252032][Inst ID: 27256784]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27261888][Inst ID: 27252136]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27262240][Inst ID: 27262240]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 27261888][Inst ID: 27261968]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27263392][Inst ID: 27258232]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27257536][Inst ID: 27257536]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 27263392][Inst ID: 27266880]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27269952][Inst ID: 27270056]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27269392][Inst ID: 27269392]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 27269952][Inst ID: 27271456]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27185520][Inst ID: 27185736]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27185520][Inst ID: 27277256]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27185520][Inst ID: 27277640]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27187264][Inst ID: 27187264]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27187328][Inst ID: 27187328]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 27292080][Inst ID: 27187088]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27296512][Inst ID: 27188072]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27296512][Inst ID: 27296424]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27296512][Inst ID: 27296280]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27296512][Inst ID: 27187736]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27296512][Inst ID: 27311112]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27303792][Inst ID: 27303792]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27303856][Inst ID: 27303856]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27303920][Inst ID: 27303920]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 27308992][Inst ID: 27328168]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27325008][Inst ID: 27323928]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27325008][Inst ID: 27324536]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27325008][Inst ID: 27324376]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27325008][Inst ID: 27188184]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27325008][Inst ID: 27265368]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27324176][Inst ID: 27324176]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27334112][Inst ID: 27334112]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 27334176][Inst ID: 27334176]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 27280208][Inst ID: 27360776]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 27285120][Inst ID: 27361800]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 27361568][Inst ID: 27363304]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 27363072][Inst ID: 27365064]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 27373472][Inst ID: 27374096]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 27374400][Inst ID: 27374480]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 27375216][Inst ID: 27375296]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 27380352][Inst ID: 27380560]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 27380992][Inst ID: 27381072]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 27381808][Inst ID: 27381888]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 27382624][Inst ID: 27382704]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 27178064][Inst ID: 27178144]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 27178880][Inst ID: 27178960]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 27179392][Inst ID: 27179808]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 27180544][Inst ID: 27180624]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 27397408][Inst ID: 27399648]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 27399424][Inst ID: 27275088]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 27275808][Inst ID: 26481632]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 26482064][Inst ID: 26482144]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 26482880][Inst ID: 26482960]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 26483696][Inst ID: 26483776]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 26484512][Inst ID: 26484592]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_good][Allocator Name: Return][Location: 183,1][Inlined Location: 183,1][BB ID: 18409456][Inst ID: 18408320]
  ret void, !dbg !45
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18417744][Inst ID: 18417848]
  %3 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18417744][Inst ID: 18414648]
  %4 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18417744][Inst ID: 18415080]
  %5 = alloca i8**, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18408560][Inst ID: 18408560]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18415488][Inst ID: 18415488]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Return][Location: 208,5][Inlined Location: 208,5][BB ID: 18417744][Inst ID: 18438104]
  ret i32 0, !dbg !60
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 107,17][Inlined Location: 107,17][BB ID: 18424576][Inst ID: 18452592]
  call void @free(i8* %11) #5, !dbg !62
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 110,50][Inlined Location: 110,50][BB ID: 18414896][Inst ID: 18455248]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !66, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 130,17][Inlined Location: 130,17][BB ID: 18457616][Inst ID: 18440752]
  call void @free(i8* %28) #5, !dbg !90
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18431824][Inst ID: 18425208]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: Return][Location: 136,1][Inlined Location: 136,1][BB ID: 18439376][Inst ID: 18425296]
  ret void, !dbg !96
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperGood][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18442592][Inst ID: 18447192]
  %2 = alloca i32, align 4, !effectiveSan !24
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperGood][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18447328][Inst ID: 18447328]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperGood][Allocator Name: Return][Location: 42,1][Inlined Location: 42,1][BB ID: 18442848][Inst ID: 18463856]
  ret void, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 148,17][Inlined Location: 148,17][BB ID: 18455968][Inst ID: 18474128]
  call void @free(i8* %10) #5, !dbg !59
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 151,50][Inlined Location: 151,50][BB ID: 18473120][Inst ID: 18475024]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !63, !effectiveSan !13
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 171,17][Inlined Location: 171,17][BB ID: 18476688][Inst ID: 18479152]
  call void @free(i8* %27) #5, !dbg !87
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 18464992][Inst ID: 18468808]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: Return][Location: 177,1][Inlined Location: 177,1][BB ID: 18470224][Inst ID: 18469920]
  ret void, !dbg !94
  call void @free(i8* %11) #5, !dbg !63, !TYCHE_MD !64
Calle Node: 0x1240c00: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x121b770: ch,glue = callseq_end 0x121bbd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bbd0:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 107,17][BB ID: 18424576][Inst ID: 18452592][Prev. Inst ID: 107]
  call void @free(i8* %11) #5, !dbg !63, !TYCHE_MD !64
0x121b770: ch,glue = callseq_end 0x121bbd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bbd0:1 Node TypeID: [ 1#107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x121b770: ch,glue = callseq_end 0x121bbd0; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bbd0:1 Node TypeID: [ 1#107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]
0x121bbd0: ch,glue = <<Unknown Node #229>> 0x121bef0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bef0:1 Node TypeID: [ 0#]
0x1240b60: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1240b60: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x121bbd0: ch,glue = <<Unknown Node #229>> 0x121bef0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bef0:1 Node TypeID: [ 0#]
0x121bbd0: ch,glue = <<Unknown Node #229>> 0x121bef0; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bef0:1 Node TypeID: [ 1#107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]
EmitMachineNode::
0x121bbd0: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bef0; 0x121bef0:1 Node TypeID: [ 1#107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:107:17 Node Type ID: [107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]

  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !67, !effectiveSan !13, !TYCHE_MD !68
Calle Node: 0x121bf90: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x1240c00: i64,ch,glue = CopyFromReg 0x1240ca0; Register:i64 %physreg35; 0x1240ca0:1 Node TypeID: [ 0#]
Second Node: 0x1240c00: i64,ch,glue = CopyFromReg 0x1240ca0; Register:i64 %physreg35; 0x1240ca0:1 Node TypeID: [ 0#]
0x1240c00: i64,ch,glue = CopyFromReg 0x1240ca0; Register:i64 %physreg35; 0x1240ca0:1 Node TypeID: [ 1#110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 110,50][BB ID: 18414896][Inst ID: 18455248][Prev. Inst ID: 110]
  %13 = call noalias i8* @malloc(i64 4) #5, !dbg !67, !effectiveSan !13, !TYCHE_MD !68
X86DAGToDAGISel:: 3
Node: 0x1240c00: i64,ch,glue = CopyFromReg 0x1240ca0; Register:i64 %physreg35; 0x1240ca0:1 Node TypeID: [ 1#110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]
0x1240ca0: ch,glue = callseq_end 0x121c030; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121c030:1 Node TypeID: [ 0#]
0x121b3b0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x1240ca0: ch,glue = callseq_end 0x121c030; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121c030:1 Node TypeID: [ 0#]
0x121c030: ch,glue = <<Unknown Node #229>> 0x121b770; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b770:1 Node TypeID: [ 0#]
0x121c030: ch,glue = <<Unknown Node #229>> 0x121b770; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b770:1 Node TypeID: [ 1#110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]
EmitMachineNode::
0x121c030: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b770; 0x121b770:1 Node TypeID: [ 1#110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:110:50 Node Type ID: [110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]

  call void @free(i8* %28) #5, !dbg !91, !TYCHE_MD !92
Calle Node: 0x1241420: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x1240de0: ch,glue = callseq_end 0x1240e80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240e80:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good1][Allocator Name: free][Location: 0,0][Inlined Location: 130,17][BB ID: 18457616][Inst ID: 18440752][Prev. Inst ID: 130]
  call void @free(i8* %28) #5, !dbg !91, !TYCHE_MD !92
0x1240de0: ch,glue = callseq_end 0x1240e80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240e80:1 Node TypeID: [ 1#130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]
X86DAGToDAGISel:: 4
Node: 0x1240de0: ch,glue = callseq_end 0x1240e80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240e80:1 Node TypeID: [ 1#130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]
0x1240e80: ch,glue = <<Unknown Node #229>> 0x121bc70; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bc70:1 Node TypeID: [ 0#]
0x1241380: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1241380: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1240e80: ch,glue = <<Unknown Node #229>> 0x121bc70; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bc70:1 Node TypeID: [ 0#]
0x1240e80: ch,glue = <<Unknown Node #229>> 0x121bc70; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bc70:1 Node TypeID: [ 1#130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]
EmitMachineNode::
0x1240e80: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121bc70; 0x121bc70:1 Node TypeID: [ 1#130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:130:17 Node Type ID: [130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:107:17 Node Type ID: [107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#107#17#0#0#0#107#17#18424576#18452592#18446744073709551615#18452592#18424576#free#FREE#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:110:50 Node Type ID: [110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#110#50#18668744#7328244225587091928#15288228118847118519#110#50#18414896#18455248#5#18455248#18414896#malloc#struct _structSigAtomic#good1#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:130:17 Node Type ID: [130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#130#17#0#0#0#130#17#18457616#18440752#18446744073709551615#18440752#18457616#free#FREE#good1#
---------------------------------------------------------------------------------------
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
Calle Node: 0x121be50: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x121b270: ch,glue = callseq_end 0x1240b60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240b60:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 148,17][BB ID: 18455968][Inst ID: 18474128][Prev. Inst ID: 148]
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
0x121b270: ch,glue = callseq_end 0x1240b60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240b60:1 Node TypeID: [ 1#148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x121b270: ch,glue = callseq_end 0x1240b60; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x1240b60:1 Node TypeID: [ 1#148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]
0x1240b60: ch,glue = <<Unknown Node #229>> 0x121b310; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b310:1 Node TypeID: [ 0#]
0x1240c00: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1240c00: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x1240b60: ch,glue = <<Unknown Node #229>> 0x121b310; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b310:1 Node TypeID: [ 0#]
0x1240b60: ch,glue = <<Unknown Node #229>> 0x121b310; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b310:1 Node TypeID: [ 1#148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]
EmitMachineNode::
0x1240b60: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b310; 0x121b310:1 Node TypeID: [ 1#148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:148:17 Node Type ID: [148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
Calle Node: 0x121bef0: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x121be50: i64,ch,glue = CopyFromReg 0x12411a0; Register:i64 %physreg35; 0x12411a0:1 Node TypeID: [ 0#]
Second Node: 0x121be50: i64,ch,glue = CopyFromReg 0x12411a0; Register:i64 %physreg35; 0x12411a0:1 Node TypeID: [ 0#]
0x121be50: i64,ch,glue = CopyFromReg 0x12411a0; Register:i64 %physreg35; 0x12411a0:1 Node TypeID: [ 1#151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 151,50][BB ID: 18473120][Inst ID: 18475024][Prev. Inst ID: 151]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !13, !TYCHE_MD !65
X86DAGToDAGISel:: 3
Node: 0x121be50: i64,ch,glue = CopyFromReg 0x12411a0; Register:i64 %physreg35; 0x12411a0:1 Node TypeID: [ 1#151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]
0x12411a0: ch,glue = callseq_end 0x121c030; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121c030:1 Node TypeID: [ 0#]
0x1240fc0: i64 = Register %physreg35 Node TypeID: [ 0#]
0x12411a0: ch,glue = callseq_end 0x121c030; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121c030:1 Node TypeID: [ 0#]
0x121c030: ch,glue = <<Unknown Node #229>> 0x121b270; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b270:1 Node TypeID: [ 0#]
0x121c030: ch,glue = <<Unknown Node #229>> 0x121b270; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b270:1 Node TypeID: [ 1#151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]
EmitMachineNode::
0x121c030: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b270; 0x121b270:1 Node TypeID: [ 1#151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:151:50 Node Type ID: [151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]

  call void @free(i8* %27) #5, !dbg !88, !TYCHE_MD !89
Calle Node: 0x1240d40: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x121bf90: ch,glue = callseq_end 0x121bd10; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bd10:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: good2][Allocator Name: free][Location: 0,0][Inlined Location: 171,17][BB ID: 18476688][Inst ID: 18479152][Prev. Inst ID: 171]
  call void @free(i8* %27) #5, !dbg !88, !TYCHE_MD !89
0x121bf90: ch,glue = callseq_end 0x121bd10; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bd10:1 Node TypeID: [ 1#171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]
X86DAGToDAGISel:: 4
Node: 0x121bf90: ch,glue = callseq_end 0x121bd10; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x121bd10:1 Node TypeID: [ 1#171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]
0x121bd10: ch,glue = <<Unknown Node #229>> 0x121b590; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b590:1 Node TypeID: [ 0#]
0x121b3b0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x121b3b0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x121bd10: ch,glue = <<Unknown Node #229>> 0x121b590; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b590:1 Node TypeID: [ 0#]
0x121bd10: ch,glue = <<Unknown Node #229>> 0x121b590; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b590:1 Node TypeID: [ 1#171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]
EmitMachineNode::
0x121bd10: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x121b590; 0x121b590:1 Node TypeID: [ 1#171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:171:17 Node Type ID: [171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:148:17 Node Type ID: [148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#148#17#0#0#0#148#17#18455968#18474128#18446744073709551615#18474128#18455968#free#FREE#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:151:50 Node Type ID: [151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#151#50#18668744#7328244225587091928#15288228118847118519#151#50#18473120#18475024#5#18475024#18473120#malloc#struct _structSigAtomic#good2#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:171:17 Node Type ID: [171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#171#17#0#0#0#171#17#18476688#18479152#18446744073709551615#18479152#18476688#free#FREE#good2#
---------------------------------------------------------------------------------------
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30833520][Inst ID: 29998136]
  %2 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30081440][Inst ID: 30081440]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLine][Allocator Name: Return][Location: 17,1][Inlined Location: 17,1][BB ID: 30959840][Inst ID: 30000480]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30954560][Inst ID: 30954360]
  %2 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30969856][Inst ID: 30969856]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWLine][Allocator Name: Return][Location: 25,1][Inlined Location: 25,1][BB ID: 30963008][Inst ID: 30969424]
  ret void, !dbg !119
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30970464][Inst ID: 30975896]
  %2 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30977280][Inst ID: 30977280]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printIntLine][Allocator Name: Return][Location: 30,1][Inlined Location: 30,1][BB ID: 30970464][Inst ID: 30978080]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30982624][Inst ID: 29044776]
  %2 = alloca i16, align 2, !effectiveSan !37
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30983344][Inst ID: 30983344]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printShortLine][Allocator Name: Return][Location: 35,1][Inlined Location: 35,1][BB ID: 30982624][Inst ID: 30982704]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30984496][Inst ID: 30990360]
  %2 = alloca float, align 4, !effectiveSan !39
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30986160][Inst ID: 30986160]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printFloatLine][Allocator Name: Return][Location: 40,1][Inlined Location: 40,1][BB ID: 30984496][Inst ID: 30979344]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30992560][Inst ID: 30984600]
  %2 = alloca i64, align 8, !effectiveSan !41
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30979088][Inst ID: 30979088]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLine][Allocator Name: Return][Location: 45,1][Inlined Location: 45,1][BB ID: 30992560][Inst ID: 30996112]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30997696][Inst ID: 30998024]
  %2 = alloca i64, align 8, !effectiveSan !43
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30999296][Inst ID: 30999296]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printLongLongLine][Allocator Name: Return][Location: 50,1][Inlined Location: 50,1][BB ID: 30997696][Inst ID: 30999632]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31002256][Inst ID: 30997336]
  %2 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31003552][Inst ID: 31003552]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printSizeTLine][Allocator Name: Return][Location: 55,1][Inlined Location: 55,1][BB ID: 31002256][Inst ID: 31004464]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31005888][Inst ID: 31002168]
  %2 = alloca i8, align 1, !effectiveSan !51
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31006800][Inst ID: 31006800]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexCharLine][Allocator Name: Return][Location: 60,1][Inlined Location: 60,1][BB ID: 31005888][Inst ID: 31007680]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31008896][Inst ID: 31008200]
  %2 = alloca i32, align 4, !effectiveSan !53
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31008896][Inst ID: 31009112]
  %3 = alloca [2 x i32], align 4, !effectiveSan !54
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31009968][Inst ID: 31009968]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printWcharLine][Allocator Name: Return][Location: 70,1][Inlined Location: 70,1][BB ID: 31008896][Inst ID: 31005808]
  ret void, !dbg !121
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31016256][Inst ID: 31015144]
  %2 = alloca i32, align 4, !effectiveSan !58
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31016560][Inst ID: 31016560]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printUnsignedLine][Allocator Name: Return][Location: 75,1][Inlined Location: 75,1][BB ID: 31016256][Inst ID: 31021008]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31026112][Inst ID: 31016360]
  %2 = alloca i8, align 1, !effectiveSan !60
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31026464][Inst ID: 31026464]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printHexUnsignedCharLine][Allocator Name: Return][Location: 80,1][Inlined Location: 80,1][BB ID: 31026112][Inst ID: 31026192]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31027616][Inst ID: 31022456]
  %2 = alloca double, align 8, !effectiveSan !61
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31021760][Inst ID: 31021760]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printDoubleLine][Allocator Name: Return][Location: 85,1][Inlined Location: 85,1][BB ID: 31027616][Inst ID: 31031104]
  ret void, !dbg !113
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31034176][Inst ID: 31034280]
  %2 = alloca %struct._twoIntsStruct*, align 8, !effectiveSan !63
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31033616][Inst ID: 31033616]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printStructLine][Allocator Name: Return][Location: 90,1][Inlined Location: 90,1][BB ID: 31034176][Inst ID: 31035680]
  ret void, !dbg !116
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30949744][Inst ID: 30949960]
  %3 = alloca i8*, align 8, !effectiveSan !74
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30949744][Inst ID: 31041480]
  %4 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30949744][Inst ID: 31041864]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30951488][Inst ID: 30951488]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 30951552][Inst ID: 30951552]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: printBytesLine][Allocator Name: Return][Location: 100,1][Inlined Location: 100,1][BB ID: 31056304][Inst ID: 30951312]
  ret void, !dbg !139
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31060736][Inst ID: 30952296]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31060736][Inst ID: 31060648]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31060736][Inst ID: 31060504]
  %6 = alloca i8*, align 8, !effectiveSan !25
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31060736][Inst ID: 30951960]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31060736][Inst ID: 31075336]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31068016][Inst ID: 31068016]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31068080][Inst ID: 31068080]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31068144][Inst ID: 31068144]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexChars][Allocator Name: Return][Location: 121,5][Inlined Location: 121,5][BB ID: 31073216][Inst ID: 31092392]
  ret i64 %60, !dbg !153
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31089232][Inst ID: 31088152]
  %4 = alloca i8*, align 8, !effectiveSan !77
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31089232][Inst ID: 31088760]
  %5 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31089232][Inst ID: 31088600]
  %6 = alloca i32*, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31089232][Inst ID: 30952408]
  %7 = alloca i64, align 8, !effectiveSan !48
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31089232][Inst ID: 31029592]
  %8 = alloca i32, align 4, !effectiveSan !36
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31088400][Inst ID: 31088400]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31098336][Inst ID: 31098336]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 31098400][Inst ID: 31098400]
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: decodeHexWChars][Allocator Name: Return][Location: 143,5][Inlined Location: 143,5][BB ID: 31044432][Inst ID: 31125000]
  ret i64 %46, !dbg !160
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrue][Allocator Name: Return][Location: 150,5][Inlined Location: 150,5][BB ID: 31049344][Inst ID: 31126024]
  ret i32 1, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsFalse][Allocator Name: Return][Location: 155,5][Inlined Location: 155,5][BB ID: 31125792][Inst ID: 31127528]
  ret i32 0, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: globalReturnsTrueOrFalse][Allocator Name: Return][Location: 160,5][Inlined Location: 160,5][BB ID: 31127296][Inst ID: 31129288]
  ret i32 %2, !dbg !107
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good1][Allocator Name: Return][Location: 179,16][Inlined Location: 179,16][BB ID: 31137696][Inst ID: 31138320]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good2][Allocator Name: Return][Location: 180,16][Inlined Location: 180,16][BB ID: 31138624][Inst ID: 31138704]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good3][Allocator Name: Return][Location: 181,16][Inlined Location: 181,16][BB ID: 31139440][Inst ID: 31139520]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good4][Allocator Name: Return][Location: 182,16][Inlined Location: 182,16][BB ID: 31144576][Inst ID: 31144784]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good5][Allocator Name: Return][Location: 183,16][Inlined Location: 183,16][BB ID: 31145216][Inst ID: 31145296]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good6][Allocator Name: Return][Location: 184,16][Inlined Location: 184,16][BB ID: 31146032][Inst ID: 31146112]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good7][Allocator Name: Return][Location: 185,16][Inlined Location: 185,16][BB ID: 31146848][Inst ID: 31146928]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good8][Allocator Name: Return][Location: 186,16][Inlined Location: 186,16][BB ID: 30942288][Inst ID: 30942368]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: good9][Allocator Name: Return][Location: 187,16][Inlined Location: 187,16][BB ID: 30943104][Inst ID: 30943184]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad1][Allocator Name: Return][Location: 190,15][Inlined Location: 190,15][BB ID: 30943616][Inst ID: 30944032]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad2][Allocator Name: Return][Location: 191,15][Inlined Location: 191,15][BB ID: 30944768][Inst ID: 30944848]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad3][Allocator Name: Return][Location: 192,15][Inlined Location: 192,15][BB ID: 31161632][Inst ID: 31163872]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad4][Allocator Name: Return][Location: 193,15][Inlined Location: 193,15][BB ID: 31163648][Inst ID: 31039312]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad5][Allocator Name: Return][Location: 194,15][Inlined Location: 194,15][BB ID: 31040032][Inst ID: 30245856]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad6][Allocator Name: Return][Location: 195,15][Inlined Location: 195,15][BB ID: 30246288][Inst ID: 30246368]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad7][Allocator Name: Return][Location: 196,15][Inlined Location: 196,15][BB ID: 30247104][Inst ID: 30247184]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad8][Allocator Name: Return][Location: 197,15][Inlined Location: 197,15][BB ID: 30247920][Inst ID: 30248000]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [/home/dante/Microbenchmarks//Juliet/testcasesupport/io.c][Caller Name: bad9][Allocator Name: Return][Location: 198,15][Inlined Location: 198,15][BB ID: 30248736][Inst ID: 30248816]
  ret void, !dbg !105
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 55,17][Inlined Location: 55,17][BB ID: 39651856][Inst ID: 39671808]
  call void @free(i8* %10) #5, !dbg !59
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: malloc][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 58,50][Inlined Location: 58,50][BB ID: 39664368][Inst ID: 39673392]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !63, !effectiveSan !12
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: free][isCall: 1][isInvoke: 0][isMustTailCall: 0][isTailCall: 0][Location: 81,17][Inlined Location: 81,17][BB ID: 39676192][Inst ID: 39680496]
  call void @free(i8* %26) #5, !dbg !86
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39646096][Inst ID: 39645096]
  %1 = alloca %struct._structSigAtomic*, align 8, !effectiveSan !23
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: Return][Location: 86,1][Inlined Location: 86,1][BB ID: 39645296][Inst ID: 39644960]
  ret void, !dbg !92
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperBad][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39690112][Inst ID: 39688136]
  %2 = alloca i32, align 4, !effectiveSan !28
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperBad][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39694320][Inst ID: 39694320]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: helperBad][Allocator Name: Return][Location: 34,1][Inlined Location: 34,1][BB ID: 39689728][Inst ID: 39690528]
  ret void, !dbg !56
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39657168][Inst ID: 39678152]
  %3 = alloca i32, align 4, !effectiveSan !28
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39657168][Inst ID: 39645736]
  %4 = alloca i32, align 4, !effectiveSan !28
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Alloca][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39657168][Inst ID: 39678776]
  %5 = alloca i8**, align 8, !effectiveSan !29
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39688752][Inst ID: 39688752]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Argument][Location: 9223372036854775807,9223372036854775807][Inlined Location: 0,0][BB ID: 39689120][Inst ID: 39689120]
EffectiveSan::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: main][Allocator Name: Return][Location: 208,5][Inlined Location: 208,5][BB ID: 39657168][Inst ID: 39691944]
  ret i32 0, !dbg !60
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
Calle Node: 0x2673860: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x266dee0: ch,glue = callseq_end 0x266e020; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266e020:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: free][Location: 0,0][Inlined Location: 55,17][BB ID: 39651856][Inst ID: 39671808][Prev. Inst ID: 55]
  call void @free(i8* %10) #5, !dbg !60, !TYCHE_MD !61
0x266dee0: ch,glue = callseq_end 0x266e020; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266e020:1 Node TypeID: [ 1#55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
X86DAGToDAGISel:: 4
Node: 0x266dee0: ch,glue = callseq_end 0x266e020; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266e020:1 Node TypeID: [ 1#55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
0x266e020: ch,glue = <<Unknown Node #229>> 0x266e340; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266e340:1 Node TypeID: [ 0#]
0x26737c0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x26737c0: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x266e020: ch,glue = <<Unknown Node #229>> 0x266e340; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266e340:1 Node TypeID: [ 0#]
0x266e020: ch,glue = <<Unknown Node #229>> 0x266e340; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266e340:1 Node TypeID: [ 1#55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
EmitMachineNode::
0x266e020: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266e340; 0x266e340:1 Node TypeID: [ 1#55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:55:17 Node Type ID: [55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !12, !TYCHE_MD !65
Calle Node: 0x266e3e0: i64 = GlobalAddress<i8* (i64)* @malloc> 0 Node TypeID: [ 0#]
First Node: 0x2673860: i64,ch,glue = CopyFromReg 0x2673900; Register:i64 %physreg35; 0x2673900:1 Node TypeID: [ 0#]
Second Node: 0x2673860: i64,ch,glue = CopyFromReg 0x2673900; Register:i64 %physreg35; 0x2673900:1 Node TypeID: [ 0#]
0x2673860: i64,ch,glue = CopyFromReg 0x2673900; Register:i64 %physreg35; 0x2673900:1 Node TypeID: [ 1#58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: malloc][Location: 7328244225587091928,15288228118847118519][Inlined Location: 58,50][BB ID: 39664368][Inst ID: 39673392][Prev. Inst ID: 58]
  %12 = call noalias i8* @malloc(i64 4) #5, !dbg !64, !effectiveSan !12, !TYCHE_MD !65
X86DAGToDAGISel:: 3
Node: 0x2673860: i64,ch,glue = CopyFromReg 0x2673900; Register:i64 %physreg35; 0x2673900:1 Node TypeID: [ 1#58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
0x2673900: ch,glue = callseq_end 0x266e480; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266e480:1 Node TypeID: [ 0#]
0x266dc60: i64 = Register %physreg35 Node TypeID: [ 0#]
0x2673900: ch,glue = callseq_end 0x266e480; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266e480:1 Node TypeID: [ 0#]
0x266e480: ch,glue = <<Unknown Node #229>> 0x266dee0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266dee0:1 Node TypeID: [ 0#]
0x266e480: ch,glue = <<Unknown Node #229>> 0x266dee0; TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266dee0:1 Node TypeID: [ 1#58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
EmitMachineNode::
0x266e480: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<i8* (i64)* @malloc> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266dee0; 0x266dee0:1 Node TypeID: [ 1#58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:58:50 Node Type ID: [58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

  call void @free(i8* %26) #5, !dbg !87, !TYCHE_MD !88
Calle Node: 0x2673ae0: i64 = GlobalAddress<void (i8*)* @free> 0 Node TypeID: [ 0#]
Second Node: 0x266e200: ch,glue = callseq_end 0x266df80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266df80:1 Node TypeID: [ 0#]
LowerCallTo::
LLVM IR Location (Inlined): [CWE364_Signal_Handler_Race_Condition__basic_13.c][Caller Name: CWE364_Signal_Handler_Race_Condition__basic_13_bad][Allocator Name: free][Location: 0,0][Inlined Location: 81,17][BB ID: 39676192][Inst ID: 39680496][Prev. Inst ID: 81]
  call void @free(i8* %26) #5, !dbg !87, !TYCHE_MD !88
0x266e200: ch,glue = callseq_end 0x266df80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266df80:1 Node TypeID: [ 1#81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
X86DAGToDAGISel:: 4
Node: 0x266e200: ch,glue = callseq_end 0x266df80; TargetConstant:i64<0>; TargetConstant:i64<0>; 0x266df80:1 Node TypeID: [ 1#81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
0x266df80: ch,glue = <<Unknown Node #229>> 0x266d940; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266d940:1 Node TypeID: [ 0#]
0x2673a40: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x2673a40: i64 = TargetConstant<0> Node TypeID: [ 0#]
0x266df80: ch,glue = <<Unknown Node #229>> 0x266d940; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266d940:1 Node TypeID: [ 0#]
0x266df80: ch,glue = <<Unknown Node #229>> 0x266d940; TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266d940:1 Node TypeID: [ 1#81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
EmitMachineNode::
0x266df80: ch,glue = <<Unknown Machine Node #65088>> TargetGlobalAddress:i64<void (i8*)* @free> 0; Register:i64 %physreg39; RegisterMask:Untyped; 0x266d940; 0x266d940:1 Node TypeID: [ 1#81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:81:17 Node Type ID: [81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:55:17 Node Type ID: [55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#55#17#0#0#0#55#17#39651856#39671808#18446744073709551615#39671808#39651856#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@malloc>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>, %RAX<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:58:50 Node Type ID: [58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#58#50#39927736#7328244225587091928#15288228118847118519#58#50#39664368#39673392#2#39673392#39664368#malloc#struct _structSigAtomic#CWE364_Signal_Handler_Race_Condition__basic_13_bad#
---------------------------------------------------------------------------------------
EmitFunctionBody::
CALL64pcrel32 <ga:@free>, <regmask %BH %BL %BP %BPL %BX %EBP %EBX %RBP %RBX %R12 %R13 %R14 %R15 %R12B %R13B %R14B %R15B %R12D %R13D %R14D %R15D %R12W %R13W %R14W %R15W>, %RSP<imp-use>, %RDI<imp-use,kill>, %RSP<imp-def>; dbg:CWE364_Signal_Handler_Race_Condition__basic_13.c:81:17 Node Type ID: [81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#]

Dumping Symbol Name: TYCHE_SYMS#CWE364_Signal_Handler_Race_Condition__basic_13.c#81#17#0#0#0#81#17#39676192#39680496#18446744073709551615#39680496#39676192#free#FREE#CWE364_Signal_Handler_Race_Condition__basic_13_bad#
---------------------------------------------------------------------------------------
