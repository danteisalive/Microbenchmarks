=================================================================
==24212==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7ffd9e7b1440 at pc 0x000000517dd2 bp 0x7ffd9e7b13e0 sp 0x7ffd9e7b13d8
READ of size 4 at 0x7ffd9e7b1440 thread T0
    #0 0x517dd1 in CWE843_Type_Confusion__char_81::CWE843_Type_Confusion__char_81_goodG2B::action(void*) const /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81_goodG2B.cpp:27:18
    #1 0x518021 in CWE843_Type_Confusion__char_81::goodG2B() /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81a.cpp:55:16
    #2 0x517e48 in CWE843_Type_Confusion__char_81::good() /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81a.cpp:60:5
    #3 0x5180ce in main /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81a.cpp:83:5
    #4 0x7fabd4a69c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310
    #5 0x41a6a9 in _start (/home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/test_good.out+0x41a6a9)

Address 0x7ffd9e7b1440 is located in stack of thread T0 at offset 32 in frame
    #0 0x517e5f in CWE843_Type_Confusion__char_81::goodG2B() /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81a.cpp:45

  This frame has 2 object(s):
    [32, 36) 'intBuffer' (line 51) <== Memory access at offset 32 is inside this variable
    [48, 56) 'ref.tmp' (line 54)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope /home/dante/Microbenchmarks/Juliet/Juliet_Test_Suite_v1.3_for_C_Cpp/C/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_81/CWE843_Type_Confusion__char_81_goodG2B.cpp:27:18 in CWE843_Type_Confusion__char_81::CWE843_Type_Confusion__char_81_goodG2B::action(void*) const
Shadow bytes around the buggy address:
  0x100033cee230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100033cee280: 00 00 00 00 f1 f1 f1 f1[f8]f2 00 f3 f3 f3 f3 f3
  0x100033cee290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee2b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee2c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033cee2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==24212==ABORTING
